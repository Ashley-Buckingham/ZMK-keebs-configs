#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

// layers
// keys

#define HYPER LS(LC(LA(LGUI)))

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
    };

    macros {
        //
        // VSCODE MACROS
        //
        // Command Palette
        // Command Palette

        macro_cmd_palette: macro_cmd_palette {
            label = "macro_cmd_palette";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI &kp LSHFT &kp P>,
                <&macro_release>,
                <&kp LGUI &kp LSHFT>;
        };

        // Search Files

        macro_search_files: macro_search_files {
            label = "macro_search_files";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI &kp LSHFT &kp F>,
                <&macro_release>,
                <&kp LGUI &kp LSHFT>;
        };

        Red_Heart: Red_Heart {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp N3>;
            label = "RED_HEART";
        };

        Heart_Eyes: Heart_Eyes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp H &kp E &kp A &kp R &kp T &kp UNDER &kp E &kp Y &kp E &kp S &kp COLON>;
            label = "HEART_EYES";
        };

        Broken_Heart: Broken_Heart {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp FSLH &kp N3>;
            label = "BROKEN_HEART";
        };

        Face_with_Tears_of_Joy: Face_with_Tears_of_Joy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp J &kp O &kp Y &kp COLON>;
            label = "FACE_WITH_TEARS_OF_JOY";
        };

        Smiling_Face: Smiling_Face {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp RPAR>;
            label = "SMILING_FACE";
        };

        ROFL: ROFL {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp R &kp O &kp L &kp L &kp I &kp N &kp G &kp UNDER &kp O &kp N &kp UNDER &kp T &kp H &kp E &kp UNDER &kp F &kp L &kp O &kp O &kp R &kp UNDER &kp L &kp A &kp U &kp G &kp H &kp I &kp N &kp G &kp COLON>;
            label = "ROFL";
        };

        Thumbs_up: Thumbs_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp PLUS &kp N1 &kp COLON>;
            label = "THUMBS_UP";
        };

        Thumbs_Down: Thumbs_Down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp MINUS &kp N1 &kp COLON>;
            label = "THUMBS_DOWN";
        };

        Crossed_Fingers: Crossed_Fingers {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp C &kp R &kp O &kp S &kp S &kp E &kp D &kp UNDER &kp F &kp I &kp N &kp G &kp E &kp R &kp S &kp COLON>;
            label = "CROSSED_FINGERS";
        };
    };

    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            bindings = <
&lt 3 ESCAPE    &ht NUMBER_1 Q  &ht NUMBER_2 W  &ht NUMBER_3 E           &ht NUMBER_4 R  &ht NUMBER_5 T    &ht NUMBER_6 Y  &ht NUMBER_7 U   &ht NUMBER_8 I     &ht NUMBER_9 O  &ht NUMBER_0 P    &mt DELETE BACKSPACE
&ht LCTRL TAB   &kp A           &kp S           &kp D                    &kp F           &kp G             &kp H           &kp J            &kp K              &kp L           &kp SINGLE_QUOTE  &kp ENTER
&kp LEFT_SHIFT  &kp Z           &kp X           &kp C                    &kp V           &kp B             &kp N           &kp M            &kp COMMA          &kp DOT         &kp FSLH          &kp RSHFT
                                                &ht C_PLAY_PAUSE C_MUTE  &lt 2 LGUI      &lt 1 SPACE       &lt 0 SPACE     &lt 3 RIGHT_GUI  &ht C_STOP C_STOP
            >;

            sensor-bindings =
                <&inc_dec_kp K_VOLUME_UP K_VOLUME_DOWN>,
                <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;

            label = "QWERTY";
        };

        Symbols1 {
            bindings = <
&kp ESC    &kp N1     &kp N2    &kp N3     &kp N4                  &kp N5                  &kp N6                 &kp N7                    &kp N8     &kp N9     &kp N0             &kp BSPC
&kp TAB    &kp MINUS  &kp FSLH  &kp COLON  &kp SEMI                &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp POUND                 &kp SPACE  &kp SPACE  &kp DOUBLE_QUOTES  &kp RET
&kp LSHFT  &trans     &trans    &kp DOT    &kp COMMA               &kp QUESTION            &kp SPACE              &kp SQT                   &trans     &trans     &trans             &kp RSHFT
                                &none      &mt LEFT_ALT LEFT_META  &kp SPACE               &kp SPACE              &mt RIGHT_ALT RIGHT_META  &none
            >;

            label = "Sym 1";
        };

        Symbols2 {
            bindings = <
&kp ESC    &kp LBKT                   &mt UP_ARROW RS(RIGHT_BRACKET)  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp POUND        &kp PERCENT       &kp CARET  &kp ASTERISK  &kp PLUS  &kp EQUAL  &mt DELETE BACKSPACE
&kp TAB    &mt LEFT_ARROW UNDERSCORE  &mt DOWN_ARROW BACKSLASH        &mt RIGHT PIPE  &kp TILDE        &kp LESS_THAN    &kp GREATER_THAN  &kp POUND  &kp SPACE     &kp SQT   &kp BSLH   &kp RET
&kp LSHFT  &kp GRAVE                  &kp SPACE                       &kp DOT         &kp COMMA        &kp QUESTION     &kp SPACE         &kp SQT    &trans        &trans    &trans     &kp RSHFT
                                                                      &trans          &trans           &kp SPACE        &kp SPACE         &trans     &trans
            >;

            label = "Sym 2";
        };

        Settings {
            bindings = <
&ext_power EP_TOG  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &none  &none  &none  &none  &none  &kp BSPC
&none              &none       &none         &none         &none         &none           &none  &none  &none  &none  &none  &none
&none              &none       &none         &none         &none         &none           &none  &none  &none  &none  &none  &none
                                             &none         &none         &none           &none  &none  &none
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
            label = "Settings ";
        };

        Emoji {
            bindings = <
&trans  &trans  &none   &Red_Heart  &Heart_Eyes  &Broken_Heart       &Face_with_Tears_of_Joy  &Smiling_Face  &ROFL   &trans  &trans  &trans
&trans  &trans  &trans  &Thumbs_up  &trans       &Crossed_Fingers    &trans                   &trans         &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans      &trans       &trans              &trans                   &trans         &trans  &trans  &trans  &trans
                        &trans      &trans       &trans              &trans                   &trans         &trans
            >;

            label = "Emoji";
        };
    };
};

// template
//  ┌──┬──┬──┬──┬──┬──┐      ┌──┬──┬──┬──┬──┬──┐
//  │  │  │  │  │  │  │      │  │  │  │  │  │  │
//  ├──┼──┼──┼──┼──┼──┤      ├──┼──┼──┼──┼──┼──┤
//  │  │  │  │  │  │  │      │  │  │  │  │  │  │
//  ├──┼──┼──┼──┼──┼──┤      ├──┼──┼──┼──┼──┼──┤
//  │  │  │  │  │  │  │      │  │  │  │  │  │  │
//  └──┴──┴──┴─┬┴─┬┴─┬┴─┐   ┌┴─┬┴─┬┴─┬┴──┴──┴──┘
//             │  │  │  │   │  │  │  │
//             └──┴──┴──┘   └──┴──┴──┘
