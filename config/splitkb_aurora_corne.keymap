#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

// layers
// keys


/ {


    macros {

//
// EMOGI MACROS
//

        // Top Row (Heart Emojis)
        emoji_red_heart: emoji_red_heart {
            label = "emoji_red_heart";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LSHFT &kp LANGLE &kp N3 &macro_release &kp LSHFT>;
        };

       emoji_heart_eyes: emoji_heart_eyes {
            label = "emoji_heart_eyes";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LSHFT &kp ASTE &macro_release &kp LSHFT &kp MINS &macro_press &kp LSHFT &kp ASTE &macro_release &kp LSHFT>;
        };

        emoji_broken_heart: emoji_broken_heart {
            label = "emoji_broken_heart";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LSHFT &kp LANGLE &kp N3 &macro_release &kp LSHFT>;
        };
        // Top Row (Happy Emojis)
        emoji_laugh_tears: emoji_laugh_tears {
            label = "emoji_laugh_tears";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SEMI &kp J &kp O &kp Y &kp SEMI>;
        };

        emoji_smile: emoji_smile {
            label = "emoji_smile";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LSHFT &kp RPAR &macro_release &kp LSHFT>;
        };

        emoji_rofl: emoji_rofl {
            label = "emoji_rofl";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SEMI &kp R &kp O &kp F &kp L &kp SEMI>;
        };

       // Middle Row (Hand Gestures)
        emoji_thumbs_up: emoji_thumbs_up {
            label = "emoji_thumbs_up";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SEMI &kp P &kp L &kp S &kp N1 &kp SEMI>;
        };

        emoji_thumbs_down: emoji_thumbs_down {
            label = "emoji_thumbs_down";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SEMI &kp M &kp I &kp N &kp S &kp N1 &kp SEMI>;
        };

        emoji_crossed_fingers: emoji_crossed_fingers {
            label = "emoji_crossed_fingers";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SEMI &kp C &kp R &kp O &kp S &kp S &kp E &kp D &kp UNDS &kp F &kp I &kp N &kp G &kp E &kp R &kp S &kp SEMI>;
        };

        // Middle Row (Celebratory Emojis)
        emoji_party_popper: emoji_party_popper {
            label = "emoji_party_popper";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SEMI &kp T &kp A &kp D &kp A &kp SEMI>;
        };

        emoji_birthday_cake: emoji_birthday_cake {
            label = "emoji_birthday_cake";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SEMI &kp B &kp I &kp R &kp T &kp H &kp D &kp A &kp Y &kp SEMI>;
        };

        emoji_party_face: emoji_party_face {
            label = "emoji_party_face";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SEMI &kp P &kp A &kp R &kp T &kp Y &kp I &kp N &kp G &kp UNDS &kp F &kp A &kp C &kp E &kp SEMI>;
        };

        // Bottom Row (Miscellaneous Emojis)
        emoji_star: emoji_star {
            label = "emoji_star";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LSHFT &kp N8 &macro_release &kp LSHFT>;
        };

        emoji_fire: emoji_fire {
            label = "emoji_fire";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SEMI &kp F &kp I &kp R &kp E &kp SEMI>;
        };

        emoji_rainbow: emoji_rainbow {
            label = "emoji_rainbow";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SEMI &kp R &kp A &kp I &kp N &kp B &kp O &kp W &kp SEMI>;
        };

        // Bottom Row (Expressive Faces)
        emoji_crying_face: emoji_crying_face {
            label = "emoji_crying_face";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LSHFT &kp COLN &kp QUOT &macro_release &kp LSHFT &kp LPAR>;
        };

        emoji_angry_face: emoji_angry_face {
            label = "emoji_angry_face";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LSHFT &kp GT &macro_release &kp LSHFT &kp COLN &kp LPAR>;
        };

        emoji_thinking_face: emoji_thinking_face {
            label = "emoji_thinking_face";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SEMI &kp T &kp H &kp I &kp N &kp K &kp I &kp N &kp G &kp SEMI>;
        };

        // Thumb Keys
        emoji_smiling_face_open_mouth: emoji_smiling_face_open_mouth {
            label = "emoji_smiling_face_open_mouth";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LSHFT &kp COLN &macro_release &kp LSHFT &kp D>;
        };

        emoji_smiling_face_sunglasses: emoji_smiling_face_sunglasses {
            label = "emoji_smiling_face_sunglasses";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp N8 &kp MINS &kp RPAR>;
        };

    };

    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        rgb_encoder: rgb_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_ENCODER";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            bindings = <
            &kp ESCAPE      &ht NUMBER_1 Q  &ht NUMBER_2 W  &ht NUMBER_3 E           &ht NUMBER_4 R  &ht NUMBER_5 T    &ht NUMBER_6 Y  &ht NUMBER_7 U   &ht NUMBER_8 I     &ht NUMBER_9 O  &ht NUMBER_0 P    &kp BACKSPACE
            &ht LCTRL TAB   &kp A           &kp S           &kp D                    &kp F           &kp G             &kp H           &kp J            &kp K              &kp L           &kp SINGLE_QUOTE  &kp ENTER
            &kp LEFT_SHIFT  &kp Z           &kp X           &kp C                    &kp V           &kp B             &kp N           &kp M            &kp COMMA          &kp DOT         &kp FSLH          &kp RSHFT
                                                            &ht C_PLAY_PAUSE C_MUTE  &lt 0 LGUI      &lt 1 SPACE       &lt 0 SPACE     &lt 0 RIGHT_GUI  &ht C_STOP C_STOP
                        >;

            sensor-bindings = <&inc_dec_kp K_VOLUME_UP K_VOLUME_DOWN>;
        };

        Settings {
            bindings = <
            &none            &bt BT_CLR                       &bt BT_SEL 0                      &bt BT_SEL 1                      &bt BT_SEL 2     &bt BT_SEL 3       &none  &none  &none  &none  &none  &kp BSPC
            &bt BT_PRV       &bt BT_NXT                       &rgb_ug RGB_EFR                   &rgb_ug RGB_EFF                   &rgb_ug RGB_SPD  &rgb_ug RGB_SPI    &none  &none  &none  &none  &none  &none
            &rgb_ug RGB_TOG  &rgb_ug RGB_COLOR_HSB(0,100,50)  &rgb_ug RGB_COLOR_HSB(116,95,49)  &rgb_ug RGB_COLOR_HSB(239,95,47)  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI    &none  &none  &none  &none  &none  &none
                                                                                                &none                             &none            &none              &none  &none  &none
                        >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        layer_5 {
            bindings = <
            &kp ESC    &kp N1     &kp N2    &kp N3     &kp N4     &kp N5                  &kp N6                 &kp N7     &kp N8     &kp N9     &kp N0             &kp BSPC
            &kp TAB    &kp MINUS  &kp FSLH  &kp COLON  &kp SEMI   &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp POUND  &kp SPACE  &kp SPACE  &kp DOUBLE_QUOTES  &kp RET
            &kp LSHFT  &trans     &trans    &kp DOT    &kp COMMA  &kp QUESTION            &kp SPACE              &kp SQT    &trans     &trans     &trans             &kp RSHFT
                                            &kp LCTRL  &kp LALT   &mt LEFT_META SPACE     &mt RIGHT_META SPACE   &kp RALT   &kp LCTRL
                        >;
        };

        Symbols {
            bindings = <
            &kp ESC        &kp LBKT                   &mt UP_ARROW RS(RIGHT_BRACKET)  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp POUND        &kp PERCENT       &kp CARET  &kp ASTERISK  &kp PLUS  &kp EQUAL  &mt DELETE BACKSPACE
            &mt LCTRL TAB  &mt LEFT_ARROW UNDERSCORE  &mt DOWN_ARROW BACKSLASH        &mt RIGHT PIPE  &kp TILDE        &kp LESS_THAN    &kp GREATER_THAN  &kp POUND  &kp SPACE     &kp SQT   &kp BSLH   &kp RET
            &kp LSHFT      &kp GRAVE                  &kp SPACE                       &kp DOT         &kp COMMA        &kp QUESTION     &kp SPACE         &kp SQT    &trans        &trans    &trans     &kp RSHFT
                                                                                    &trans          &trans           &trans           &trans            &trans     &trans
                        >;

            label = "Symbols";
        };
    };
};

// template
//  ┌──┬──┬──┬──┬──┬──┐      ┌──┬──┬──┬──┬──┬──┐
//  │  │  │  │  │  │  │      │  │  │  │  │  │  │
//  ├──┼──┼──┼──┼──┼──┤      ├──┼──┼──┼──┼──┼──┤
//  │  │  │  │  │  │  │      │  │  │  │  │  │  │
//  ├──┼──┼──┼──┼──┼──┤      ├──┼──┼──┼──┼──┼──┤
//  │  │  │  │  │  │  │      │  │  │  │  │  │  │
//  └──┴──┴──┴─┬┴─┬┴─┬┴─┐   ┌┴─┬┴─┬┴─┬┴──┴──┴──┘
//             │  │  │  │   │  │  │  │
//             └──┴──┴──┘   └──┴──┴──┘
