#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

// layers
// keys

#define HYPER LS(LC(LA(LGUI)))

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
    };

    macros {
        //
        // VSCODE MACROS
        //

        // Command Palette
        macro_cmd_palette: macro_cmd_palette {
            label = "macro_cmd_palette";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LGUI &kp LSHFT &kp P &macro_release &kp LGUI &kp LSHFT>;
        };

        // Search Files
        macro_search_files: macro_search_files {
            label = "macro_search_files";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LGUI &kp LSHFT &kp F &macro_release &kp LGUI &kp LSHFT>;
        };

        // Multiple Cursors
        macro_multiple_cursors_down: macro_multiple_cursors_down {
            label = "macro_multiple_cursors_down";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LGUI &kp LALT &kp DNAR &macro_release &kp LGUI &kp LALT>;
        };
        macro_multiple_cursors_up: macro_multiple_cursors_up {
            label = "macro_multiple_cursors_up";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LGUI &kp LALT &kp UPAR &macro_release &kp LGUI &kp LALT>;
        };

        // Delete the Line
        macro_delete_line: macro_delete_line {
            label = "macro_delete_line";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LGUI &kp LSHFT &kp K &macro_release &kp LGUI &kp LSHFT>;
        };

        // Copy Line Up/Down
        macro_copy_line_up: macro_copy_line_up {
            label = "macro_copy_line_up";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LALT &kp LSHFT &kp UPAR &macro_release &kp LALT &kp LSHFT>;
        };
        macro_copy_line_down: macro_copy_line_down {
            label = "macro_copy_line_down";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LALT &kp LSHFT &kp DNAR &macro_release &kp LALT &kp LSHFT>;
        };

        // Preview Markdown
        macro_preview_markdown: macro_preview_markdown {
            label = "macro_preview_markdown";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LGUI &kp LSHFT &kp V &macro_release &kp LGUI &kp LSHFT>;
        };

        // Toggle Sidebar
        macro_toggle_sidebar: macro_toggle_sidebar {
            label = "macro_toggle_sidebar";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LGUI &kp B>;
        };

        // Rename Component
        macro_rename_component: macro_rename_component {
            label = "macro_rename_component";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp F2>;
        };

        // Select Current Line
        macro_select_current_line: macro_select_current_line {
            label = "macro_select_current_line";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LGUI &kp L>;
        };

        // Toggle Terminal
        macro_toggle_terminal: macro_toggle_terminal {
            label = "macro_toggle_terminal";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LGUI &kp GRAVE>;
        };

        // Format Document
        macro_format_document: macro_format_document {
            label = "macro_format_document";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LSHFT &kp LALT &kp F &macro_release &kp LSHFT &kp LALT>;
        };

        // Split Editor
        macro_split_editor: macro_split_editor {
            label = "macro_split_editor";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LGUI &kp BSLS>;
        };

        // Search File
        macro_search_file: macro_search_file {
            label = "macro_search_file";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LGUI &kp P>;
        };

        // Select the Current Word
        macro_select_current_word: macro_select_current_word {
            label = "macro_select_current_word";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LGUI &kp D>;
        };

    };

    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        rgb_encoder: rgb_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_ENCODER";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            bindings = <
&kp ESCAPE      &ht NUMBER_1 Q  &ht NUMBER_2 W  &ht NUMBER_3 E           &ht NUMBER_4 R  &ht NUMBER_5 T    &ht NUMBER_6 Y  &ht NUMBER_7 U   &ht NUMBER_8 I     &ht NUMBER_9 O  &ht NUMBER_0 P    &kp BACKSPACE
&ht LCTRL TAB   &kp A           &kp S           &kp D                    &kp F           &kp G             &kp H           &kp J            &kp K              &kp L           &kp SINGLE_QUOTE  &kp ENTER
&kp LEFT_SHIFT  &kp Z           &kp X           &kp C                    &kp V           &kp B             &kp N           &kp M            &kp COMMA          &kp DOT         &kp FSLH          &kp RSHFT
                                                &ht C_PLAY_PAUSE C_MUTE  &lt 0 LGUI      &lt 1 SPACE       &lt 0 SPACE     &lt 0 RIGHT_GUI  &ht C_STOP C_STOP
            >;

            sensor-bindings = <&inc_dec_kp K_VOLUME_UP K_VOLUME_DOWN>;
        };

        Settings {
            bindings = <
&none            &bt BT_CLR                       &bt BT_SEL 0                      &bt BT_SEL 1                      &bt BT_SEL 2     &bt BT_SEL 3       &none  &none  &none  &none  &none  &kp BSPC
&bt BT_PRV       &bt BT_NXT                       &rgb_ug RGB_EFR                   &rgb_ug RGB_EFF                   &rgb_ug RGB_SPD  &rgb_ug RGB_SPI    &none  &none  &none  &none  &none  &none
&rgb_ug RGB_TOG  &rgb_ug RGB_COLOR_HSB(0,100,50)  &rgb_ug RGB_COLOR_HSB(116,95,49)  &rgb_ug RGB_COLOR_HSB(239,95,47)  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI    &none  &none  &none  &none  &none  &none
                                                                                    &none                             &none            &none              &none  &none  &none
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        layer_5 {
            bindings = <
&kp ESC    &kp N1     &kp N2    &kp N3     &kp N4     &kp N5                  &kp N6                 &kp N7     &kp N8     &kp N9     &kp N0             &kp BSPC
&kp TAB    &kp MINUS  &kp FSLH  &kp COLON  &kp SEMI   &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp POUND  &kp SPACE  &kp SPACE  &kp DOUBLE_QUOTES  &kp RET
&kp LSHFT  &trans     &trans    &kp DOT    &kp COMMA  &kp QUESTION            &kp SPACE              &kp SQT    &trans     &trans     &trans             &kp RSHFT
                                &kp LCTRL  &kp LALT   &mt LEFT_META SPACE     &mt RIGHT_META SPACE   &kp RALT   &kp LCTRL
            >;
        };

        Symbols {
            bindings = <
&kp ESC        &kp LBKT                   &mt UP_ARROW RS(RIGHT_BRACKET)  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp POUND        &kp PERCENT       &kp CARET  &kp ASTERISK  &kp PLUS  &kp EQUAL  &mt DELETE BACKSPACE
&mt LCTRL TAB  &mt LEFT_ARROW UNDERSCORE  &mt DOWN_ARROW BACKSLASH        &mt RIGHT PIPE  &kp TILDE        &kp LESS_THAN    &kp GREATER_THAN  &kp POUND  &kp SPACE     &kp SQT   &kp BSLH   &kp RET
&kp LSHFT      &kp GRAVE                  &kp SPACE                       &kp DOT         &kp COMMA        &kp QUESTION     &kp SPACE         &kp SQT    &trans        &trans    &trans     &kp RSHFT
                                                                          &trans          &trans           &trans           &trans            &trans     &trans
            >;

            label = "Symbols";
        };
    };
};

// template
//  ┌──┬──┬──┬──┬──┬──┐      ┌──┬──┬──┬──┬──┬──┐
//  │  │  │  │  │  │  │      │  │  │  │  │  │  │
//  ├──┼──┼──┼──┼──┼──┤      ├──┼──┼──┼──┼──┼──┤
//  │  │  │  │  │  │  │      │  │  │  │  │  │  │
//  ├──┼──┼──┼──┼──┼──┤      ├──┼──┼──┼──┼──┼──┤
//  │  │  │  │  │  │  │      │  │  │  │  │  │  │
//  └──┴──┴──┴─┬┴─┬┴─┬┴─┐   ┌┴─┬┴─┬┴─┬┴──┴──┴──┘
//             │  │  │  │   │  │  │  │
//             └──┴──┴──┘   └──┴──┴──┘
